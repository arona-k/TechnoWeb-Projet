{"ast":null,"code":"var _jsxFileName = \"D:\\\\Arona\\\\Documents\\\\ECE\\\\ING4\\\\Technologies Web\\\\TechnoWeb-Projet\\\\frontend\\\\src\\\\components\\\\HistoryRow.js\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport renderItemSet from './ItemSet';\nimport React from 'react';\nimport RiotAPI from '../tools/RiotAPI';\nimport summonerSpells from '../jsons/summonerspells.json'; //URLS\n\nconst CHAMP_SQUARE_ASSET_URL = \"http://ddragon.leagueoflegends.com/cdn/11.23.1/img/champion\";\nconst SUMM_SPELL_ASSET_URL = \"http://ddragon.leagueoflegends.com/cdn/11.23.1/img/spell\";\nexport default class HistoryRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetched: false,\n      match_id: props.match_id,\n      puuid: props.puuid,\n      match: []\n    };\n  }\n\n  componentDidMount() {\n    let api = new RiotAPI();\n    api.fetchMatch(this.state.match_id).then(response => {\n      this.setState({\n        match: response.data.info,\n        fetched: true\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getSummonerSpell(summonerSpellID) {\n    let spellName = Object.keys(summonerSpells.data)[summonerSpellID];\n    if (spellName === undefined) console.log(summonerSpellID);\n    return \"\".concat(spellName, \".png\");\n  }\n\n  getParticipantId() {\n    let participantId = null;\n    const participants = this.state.match.participants;\n\n    for (let i = 0; i < participants.length; i++) {\n      if (participants[i].puuid === this.state.puuid) {\n        participantId = i;\n        break;\n      }\n    }\n\n    return participantId;\n  }\n\n  getItems(participant) {\n    let items = [];\n\n    for (let i = 0; i < 6; i++) {\n      items.push(participant[\"item\".concat(i)]);\n    }\n\n    return items;\n  }\n\n  calculateKP(participants, win) {\n    let pCnt = 0;\n    let totalKills = 0;\n    let totalAssists = 0;\n\n    for (let i = 0; i < participants.length; i++) {\n      if (participants[i][\"win\"] === win) {\n        totalKills += participants[i][\"kills\"];\n      }\n    }\n\n    return totalKills;\n  }\n\n  render() {\n    if (!this.state.fetched) return null;\n    const match = this.state.match;\n    const participantId = this.getParticipantId();\n    const participant = match.participants[participantId];\n    const items = this.getItems(participant);\n    const historyContainer = participant[\"win\"] ? \"historyContainer victory\" : \"historyContainer defeat\";\n    const champIcon = \"\".concat(CHAMP_SQUARE_ASSET_URL, \"/\").concat(participant[\"championName\"], \".png\");\n    const summonerSpell1 = \"\".concat(SUMM_SPELL_ASSET_URL, \"/\").concat(this.getSummonerSpell(participant[\"summoner1Id\"]));\n    const summonerSpell2 = \"\".concat(SUMM_SPELL_ASSET_URL, \"/\").concat(this.getSummonerSpell(participant[\"summoner2Id\"]));\n    const KDA = \"\".concat(participant[\"kills\"], \"/\").concat(participant[\"deaths\"], \"/\").concat(participant[\"assists\"]);\n    const minionsKilled = participant[\"totalMinionsKilled\"];\n    const KPraw = (participant[\"kills\"] + participant[\"assists\"]) / this.calculateKP(match.participants, participant[\"win\"]) * 100;\n    const KP = \"\".concat(Number(KPraw).toFixed(0));\n    return React.createElement(\"div\", {\n      className: historyContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Image, {\n      className: \"historyChampIcon\",\n      src: champIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(Container, {\n      className: \"d-flex p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Image, {\n      className: \"historySummonerSpell\",\n      src: summonerSpell1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Image, {\n      className: \"historySummonerSpell mx-1\",\n      src: summonerSpell2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"d-flex flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, KDA), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, minionsKilled, \" CS - \", KP, \"%kp\"))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, renderItemSet(items))));\n  }\n\n}","map":{"version":3,"sources":["D:/Arona/Documents/ECE/ING4/Technologies Web/TechnoWeb-Projet/frontend/src/components/HistoryRow.js"],"names":["Row","Col","Image","Container","renderItemSet","React","RiotAPI","summonerSpells","CHAMP_SQUARE_ASSET_URL","SUMM_SPELL_ASSET_URL","HistoryRow","Component","constructor","props","state","fetched","match_id","puuid","match","componentDidMount","api","fetchMatch","then","response","setState","data","info","catch","error","console","log","getSummonerSpell","summonerSpellID","spellName","Object","keys","undefined","getParticipantId","participantId","participants","i","length","getItems","participant","items","push","calculateKP","win","pCnt","totalKills","totalAssists","render","historyContainer","champIcon","summonerSpell1","summonerSpell2","KDA","minionsKilled","KPraw","KP","Number","toFixed"],"mappings":"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","sourcesContent":["import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport renderItemSet from './ItemSet';\r\nimport React from 'react';\r\nimport RiotAPI from '../tools/RiotAPI';\r\n\r\nimport summonerSpells from '../jsons/summonerspells.json';\r\n\r\n//URLS\r\nconst CHAMP_SQUARE_ASSET_URL = \"http://ddragon.leagueoflegends.com/cdn/11.23.1/img/champion\";\r\nconst SUMM_SPELL_ASSET_URL = \"http://ddragon.leagueoflegends.com/cdn/11.23.1/img/spell\";\r\n\r\nexport default class HistoryRow extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            fetched: false,\r\n            match_id: props.match_id,\r\n            puuid: props.puuid,\r\n            match: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        let api = new RiotAPI();\r\n        api.fetchMatch(this.state.match_id)\r\n        .then((response) => {\r\n            this.setState({\r\n                match: response.data.info,\r\n                fetched: true\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    getSummonerSpell( summonerSpellID )\r\n    {\r\n        let spellName = Object.keys(summonerSpells.data)[ summonerSpellID ];   \r\n        if (spellName === undefined)\r\n            console.log(summonerSpellID);\r\n        return `${spellName}.png`;\r\n    }\r\n\r\n\r\n    getParticipantId()\r\n    {\r\n        let participantId = null;\r\n        const participants = this.state.match.participants\r\n        for (let i = 0; i < participants.length; i++)\r\n        {\r\n            if ( participants[i].puuid === this.state.puuid )\r\n            {\r\n                participantId = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return participantId;\r\n    }\r\n\r\n    getItems(participant)\r\n    {\r\n        let items = [];\r\n        for(let i = 0; i < 6; i++)\r\n        {\r\n            items.push(participant[`item${i}`]);\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    calculateKP(participants, win)\r\n    {\r\n        let pCnt = 0;\r\n        let totalKills = 0;\r\n        let totalAssists = 0;\r\n        for(let i = 0; i < participants.length; i++ )\r\n        {\r\n            if ( participants[i][\"win\"] === win) \r\n            {\r\n                totalKills += participants[i][\"kills\"];\r\n            }\r\n        }\r\n\r\n        return totalKills;\r\n    }\r\n\r\n    render()\r\n    {   \r\n        \r\n        if ( !this.state.fetched )\r\n            return null;\r\n        const match = this.state.match;\r\n        const participantId = this.getParticipantId();\r\n        const participant = match.participants[ participantId ];\r\n        const items = this.getItems(participant);\r\n\r\n        const historyContainer = participant[\"win\"]?\"historyContainer victory\":\"historyContainer defeat\";\r\n\r\n        const champIcon = `${CHAMP_SQUARE_ASSET_URL}/${participant[\"championName\"]}.png`;\r\n        const summonerSpell1 = `${SUMM_SPELL_ASSET_URL}/${this.getSummonerSpell(participant[\"summoner1Id\"])}`;\r\n        const summonerSpell2 = `${SUMM_SPELL_ASSET_URL}/${this.getSummonerSpell(participant[\"summoner2Id\"])}`;\r\n        const KDA = `${participant[\"kills\"]}/${participant[\"deaths\"]}/${participant[\"assists\"]}`;\r\n        const minionsKilled = participant[\"totalMinionsKilled\"];\r\n\r\n        const KPraw = ((participant[\"kills\"] + participant[\"assists\"])/this.calculateKP(match.participants, participant[\"win\"]))*100;\r\n        const KP = `${Number(KPraw).toFixed(0)}`;\r\n        \r\n\r\n\r\n        return(\r\n            <div className={historyContainer}>\r\n                <Row>\r\n                    <Col xs={2}>\r\n                        <Row>\r\n                            <Image className=\"historyChampIcon\" src={champIcon}/> \r\n                        </Row>\r\n                        <Container className=\"d-flex p-2\" >\r\n                            <Image className=\"historySummonerSpell\" src={summonerSpell1}/>\r\n                            <Image className=\"historySummonerSpell mx-1\" src={summonerSpell2}/>\r\n                        </Container>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Container className=\"d-flex flex-column\">\r\n                            <h3>{KDA}</h3>\r\n                            <h5>{minionsKilled} CS - {KP}%kp</h5>\r\n                        </Container>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        {renderItemSet(items)}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n        "]},"metadata":{},"sourceType":"module"}