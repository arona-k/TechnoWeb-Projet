{"ast":null,"code":"var _jsxFileName = \"D:\\\\Arona\\\\Documents\\\\ECE\\\\ING4\\\\Technologies Web\\\\TechnoWeb-Projet\\\\frontend\\\\src\\\\components\\\\SummonerHistory.js\";\nimport React from 'react';\nimport RiotAPI from '../tools/RiotAPI.js';\nimport HistoryRow from './HistoryRow.js';\nexport default class SummonerHistory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      puuid: props.puuid,\n      matches_id: []\n    };\n  }\n\n  componentDidMount() {\n    this.getMatchesHistory();\n  }\n\n  getMatchesHistory() {\n    const api = new RiotAPI();\n    api.fetchMatchesHistory(this.state.puuid).then(function (response) {\n      this.setState({\n        matches_id: response.data\n      });\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  getSummonerSpell(summonerSpellID) {\n    let id = \"\";\n\n    switch (summonerSpellID) {\n      case 4:\n        id = \"SummonerFlash.png\";\n        break;\n\n      case 11:\n        id = \"SummonerSmite.png\";\n        break;\n\n      case 14:\n        id = \"SummonerDot.png\";\n        break;\n\n      default:\n        id = 0;\n    }\n\n    return id;\n  }\n\n  render() {\n    let historyRows = [];\n\n    for (let i = 0; i < this.state.matches_id.length - 5; i++) {\n      historyRows[i] = React.createElement(HistoryRow, {\n        match_id: this.state.matches_id[i],\n        puuid: this.state.puuid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, historyRows.map(row => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, row, \" \")));\n  }\n\n}","map":{"version":3,"sources":["D:/Arona/Documents/ECE/ING4/Technologies Web/TechnoWeb-Projet/frontend/src/components/SummonerHistory.js"],"names":["React","RiotAPI","HistoryRow","SummonerHistory","Component","constructor","props","state","puuid","matches_id","componentDidMount","getMatchesHistory","api","fetchMatchesHistory","then","response","setState","data","catch","error","console","log","getSummonerSpell","summonerSpellID","id","render","historyRows","i","length","map","row"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQC,OAAR,MAAsB,qBAAtB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAKA,eAAe,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA6C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEF,KAAK,CAACE,KADJ;AAETC,MAAAA,UAAU,EAAG;AAFJ,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GACjB;AACG,SAAKC,iBAAL;AACF;;AAEDA,EAAAA,iBAAiB,GACjB;AACI,UAAMC,GAAG,GAAG,IAAIX,OAAJ,EAAZ;AACAW,IAAAA,GAAG,CAACC,mBAAJ,CAAwB,KAAKN,KAAL,CAAWC,KAAnC,EACCM,IADD,CACM,UAASC,QAAT,EACN;AACI,WAAKC,QAAL,CAAc;AACVP,QAAAA,UAAU,EAAEM,QAAQ,CAACE;AADX,OAAd;AAGH,KAND,EAOCC,KAPD,CAOO,UAAUC,KAAV,EAAiB;AACpB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAVD;AAWH;;AAEDG,EAAAA,gBAAgB,CAAEC,eAAF,EAChB;AACI,QAAIC,EAAE,GAAG,EAAT;;AACA,YAASD,eAAT;AACI,WAAK,CAAL;AAAQC,QAAAA,EAAE,GAAG,mBAAL;AAA0B;;AAClC,WAAK,EAAL;AAASA,QAAAA,EAAE,GAAG,mBAAL;AAA0B;;AACnC,WAAK,EAAL;AAASA,QAAAA,EAAE,GAAG,iBAAL;AAAwB;;AAEjC;AAASA,QAAAA,EAAE,GAAG,CAAL;AALb;;AAOA,WAAOA,EAAP;AACH;;AAGDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAI,KAAKpB,KAAL,CAAWE,UAAX,CAAsBmB,MAAtB,GAA6B,CAAlD,EAAsDD,CAAC,EAAvD,EACA;AACID,MAAAA,WAAW,CAACC,CAAD,CAAX,GAAiB,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWE,UAAX,CAAsBkB,CAAtB,CAAtB;AAAgD,QAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB;AACH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKkB,WAAW,CAACG,GAAZ,CAAiBC,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,GAAN,MAAxB,CADL,CADJ;AAKH;;AA1DuD","sourcesContent":["import React from 'react';\r\nimport  RiotAPI  from '../tools/RiotAPI.js';\r\nimport HistoryRow from './HistoryRow.js';\r\n\r\n\r\n\r\n\r\nexport default class SummonerHistory extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            puuid: props.puuid,\r\n            matches_id:  []   \r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n       this.getMatchesHistory();\r\n    }\r\n       \r\n    getMatchesHistory()\r\n    {\r\n        const api = new RiotAPI();\r\n        api.fetchMatchesHistory(this.state.puuid)\r\n        .then(function(response)\r\n        {   \r\n            this.setState({\r\n                matches_id: response.data\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n        });\r\n    }\r\n    \r\n    getSummonerSpell( summonerSpellID )\r\n    {\r\n        let id = \"\";\r\n        switch ( summonerSpellID ){\r\n            case 4: id = \"SummonerFlash.png\"; break;\r\n            case 11: id = \"SummonerSmite.png\"; break;\r\n            case 14: id = \"SummonerDot.png\"; break;\r\n\r\n            default: id = 0;\r\n        }\r\n        return id;\r\n    }\r\n\r\n\r\n    render(){\r\n        let historyRows = [];\r\n        for( let i = 0; i < (this.state.matches_id.length-5); i++)\r\n        {\r\n            historyRows[i] = <HistoryRow match_id={this.state.matches_id[i]} puuid={this.state.puuid} />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {historyRows.map( row => <div>{row} </div>)}\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}